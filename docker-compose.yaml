version: '3'

services:

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD", "cqlsh", "--execute", "DESCRIBE KEYSPACES;" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - project-net

  spark:
    image: docker.io/bitnami/spark:3
    container_name: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
    networks:
      - project-net
    volumes:
      - ./:/opt/app/

  spark-worker:
    image: docker.io/bitnami/spark:3
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=5G
      - SPARK_WORKER_CORES=5
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - project-net
    volumes:
      - ./:/opt/app/

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    networks:
      - project-net
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - project-net

  socket:
    build:
      context: .
      dockerfile: DataExtraction/Dockerfile
    container_name: socket
    depends_on:
      cassandra:
        condition: service_healthy
    networks:
      - project-net

networks:
  project-net:
    name: project-net
